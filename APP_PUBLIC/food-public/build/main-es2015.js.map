{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/food-service.service.ts","./src/app/home-list/home-list.component.ts","./src/app/home-list/home-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACY;;AAQ7D,MAAM,SAAS;;wFAAT,SAAS,cAFR,gFAAiB;4IAElB,SAAS,mBAHT,EAAE,YADJ,CAAC,uEAAa,EAAE,qEAAgB,CAAC;mIAI/B,SAAS,mBALL,gFAAiB,aACtB,uEAAa,EAAE,qEAAgB;6FAI9B,SAAS;cANrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,gFAAiB,CAAC;gBACjC,OAAO,EAAE,CAAC,uEAAa,EAAE,qEAAgB,CAAC;gBAC1C,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,gFAAiB,CAAC;aAC/B;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAA2C;;;AAKpC,MAAM,kBAAkB;IAE7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD5B,aAAQ,GAAG,iCAAiC,CAAC;IACd,CAAC;IAExC,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAS,IAAI,CAAC,QAAQ,CAAC;aAC1B,SAAS,EAAE;aACX,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,OAAO,QAAkB,CAAC;QAC5B,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IACO,WAAW,CAAC,KAAU;QAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;;oFAhBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAA+D;AAEb;;;;;ICAhD,0EACE;IAAA,qEACE;IAAA,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IACjC,4DAAK;IACP,4DAAO;;;IAHC,0DAAsB;IAAtB,6FAAsB;IACtB,0DAAsB;IAAtB,6FAAsB;;ADIzB,MAAM,iBAAiB;IAE5B,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;IAAG,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,KAAa,EAAE,EAAE;YACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC5B,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;kFAVU,iBAAiB;iGAAjB,iBAAiB,8GAFjB,CAAC,wEAAkB,CAAC;QCPjC,oEAAG;QAAA,qEAAU;QAAA,4DAAI;QACjB,sEACE;QAAA,+GACE;QAKJ,4DAAM;;QANE,0DAA0B;QAA1B,8EAA0B;;6FDOrB,iBAAiB;cAN7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,MAAM,EAAE,EAAE;gBACV,SAAS,EAAE,CAAC,wEAAkB,CAAC;aAChC;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HomeListComponent } from \"./home-list/home-list.component\";\n\n@NgModule({\n  declarations: [HomeListComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [HomeListComponent]\n})\nexport class AppModule {}\n","import { Food } from \"./food\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\n@Injectable({\n  providedIn: \"root\"\n})\nexport class FoodServiceService {\n  private foodsUrl = \"http://localhost:3000/api/foods\";\n  constructor(private http: HttpClient) {}\n\n  getFoods(): Promise<void | Food[]> {\n    return this.http\n      .get<Food[]>(this.foodsUrl)\n      .toPromise()\n      .then(response => {\n        console.log(response);\n        return response as Food[];\n      })\n      .catch(this.handleError);\n  }\n  private handleError(error: any) {\n    console.log(\"error\");\n  }\n}\n","import { FoodServiceService } from \"./../food-service.service\";\nimport { Food } from \"./../food\";\nimport { Component, OnInit } from \"@angular/core\";\n@Component({\n  selector: \"app-home-list\",\n  templateUrl: \"./home-list.component.html\",\n  styles: [],\n  providers: [FoodServiceService]\n})\nexport class HomeListComponent implements OnInit {\n  foods: Food[];\n  constructor(private foodService: FoodServiceService) {}\n\n  ngOnInit(): void {\n    this.foodService.getFoods().then((foods: Food[]) => {\n      this.foods = foods.map(food => {\n        return food;\n      });\n    });\n  }\n}\n","<p>Food List!</p>\n<div>\n  <span *ngFor=\"let food of foods\" class=\"badge\">\n    <ul>\n      <li>Name : {{ food.name }}</li>\n      <li>Type : {{ food.type }}</li>\n    </ul>\n  </span>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}